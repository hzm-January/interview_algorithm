def isValidSudoku(board: list[list[str]]) -> bool:
    """ hash """
    hash_r = [[0] * 10 for _ in range(9)]
    hash_c = [[0] * 10 for _ in range(9)]
    hash_m = [[[0] * 10 for _ in range(3)] for _ in range(3)]
    for i in range(9):
        for j in range(9):
            num = board[i][j]
            if not num.isdigit(): continue
            num = int(num)
            if hash_r[i][num] or hash_c[j][num] or hash_m[i // 3][j // 3][num]:
                return False
            hash_r[i][num] += 1
            hash_c[j][num] += 1
            hash_m[i // 3][j // 3][num] += 1
    return True


if __name__ == '__main__':
    # board = [["5", "3", ".", ".", "7", ".", ".", ".", "."], ["6", ".", ".", "1", "9", "5", ".", ".", "."],
    #          [".", "9", "8", ".", ".", ".", ".", "6", "."], ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
    #          ["4", ".", ".", "8", ".", "3", ".", ".", "1"], ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
    #          [".", "6", ".", ".", ".", ".", "2", "8", "."], [".", ".", ".", "4", "1", "9", ".", ".", "5"],
    #          [".", ".", ".", ".", "8", ".", ".", "7", "9"]]
    board = [["8", "3", ".", ".", "7", ".", ".", ".", "."]
        , ["6", ".", ".", "1", "9", "5", ".", ".", "."]
        , [".", "9", "8", ".", ".", ".", ".", "6", "."]
        , ["8", ".", ".", ".", "6", ".", ".", ".", "3"]
        , ["4", ".", ".", "8", ".", "3", ".", ".", "1"]
        , ["7", ".", ".", ".", "2", ".", ".", ".", "6"]
        , [".", "6", ".", ".", ".", ".", "2", "8", "."]
        , [".", ".", ".", "4", "1", "9", ".", ".", "5"]
        , [".", ".", ".", ".", "8", ".", ".", "7", "9"]]
    print(isValidSudoku(board))
